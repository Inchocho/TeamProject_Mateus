<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.movieyo.refund">

	<resultMap type="refundDto" id="refundResultMap">
		<id column="REFUND_NO" property="refundNo"/>
		<result column="USER_NO" property="userNo"/>
		<result column="BUY_NO" property="buyNo"/>
		<result column="REFUND_DATE" property="refundDate"/>
		<result column="REFUND_STATUS" property="refundStatus"/>		
	</resultMap>
	
	<!-- 11/25 검색 ALL - 영화제목이나 환불상태 -->
	<!-- 나머지는 해당 서치옵션만 -->
    <sql id="search">
        <choose>
            <when test="searchOption == 'all'">
                WHERE M.MOVIE_TITLE LIKE '%'||#{keyword}||'%'     
                OR M.REFUND_STATUS LIKE '%'||#{keyword}||'%'
                OR M.REFUND_NO LIKE '%'||#{keyword}||'%'   
                OR M.USER_NAME LIKE '%'||#{keyword}||'%'        
            </when>
            <otherwise>
                WHERE ${searchOption} LIKE '%'||#{keyword}||'%'
            </otherwise>
        </choose>
    </sql>
    
    <!-- 관리자의 경우 조회 -->
    <sql id="refundListSearch">    	
   		<if test="userAdmin == 0">
   		    AND C.USER_NO = #{userNo}	
   		</if>
    </sql>    
    
    <!-- 환불처리(관리자) 확인 -->
    <sql id="refundChk">
    	<choose>
    		<when test="admit == 1">
    			REFUND_STATUS = '환불완료'
    		</when>
    		<otherwise>
    			REFUND_STATUS = '환불불가'
    		</otherwise>
    	</choose>
    </sql>
	
<!-- 	영화수 -->
	<select id="refundSelectTotalCount" resultType="java.lang.Integer" parameterType="map">
		SELECT COUNT(*) FROM    
      	  (SELECT A.MOVIE_TITLE, A.MOVIE_PRICE, B.BUY_DATE, C.REFUND_DATE, C.REFUND_STATUS, C.REFUND_NO,
      	  	D.USER_NAME
            FROM MVY_MOVIE A, 
            MVY_BUY B, 
            MVY_REFUND C,
            MVY_USER D        	                       
            WHERE A.MOVIE_NO = B.MOVIE_NO            
            AND B.BUY_NO = C.BUY_NO
            AND B.USER_NO = D.USER_NO
            <include refid="refundListSearch"></include>
            ORDER BY C.REFUND_NO ASC) M		
            <include refid="search"></include>
	</select>	
	
	<select id="refundSelectList" resultType="map" parameterType="map">
			SELECT RF.MOVIE_TITLE, RF.MOVIE_PRICE, RF.BUY_DATE, RF.REFUND_DATE, RF.REFUND_STATUS
			,RF.MOVIE_NO, RF.USER_NO, RF.REFUND_NO, RF.BUY_NO, RF.USER_NICKNAME, RF.USER_NAME
			FROM   
			(SELECT ROWNUM RNUM, M.MOVIE_TITLE, M.MOVIE_PRICE, M.BUY_DATE, M.REFUND_DATE, M.REFUND_STATUS
			,M.MOVIE_NO, M.USER_NO, M.REFUND_NO, M.BUY_NO, M.USER_NICKNAME, M.USER_NAME
			FROM    
			(SELECT A.MOVIE_TITLE, A.MOVIE_PRICE, B.BUY_DATE, C.REFUND_DATE, C.REFUND_STATUS    
			,A.MOVIE_NO, B.USER_NO, C.REFUND_NO, C.BUY_NO, D.USER_NICKNAME, D.USER_NAME             
			FROM MVY_MOVIE A,
			MVY_BUY B, 
			MVY_REFUND C,
			MVY_USER D                        
			WHERE A.MOVIE_NO = B.MOVIE_NO             
			AND B.BUY_NO = C.BUY_NO
			AND C.USER_NO = D.USER_NO
			<include refid="refundListSearch"></include>                                            
			) M                                       
			<include refid="search"></include>) RF             
			WHERE RF.RNUM BETWEEN #{start} AND #{end}
			ORDER BY REFUND_DATE ASC   				            	 		       
	</select>
	
	<!-- 환불내역 추가 -->
	<insert id="refundInsertOne" parameterType="com.movieyo.refund.dto.RefundDto"
	useGeneratedKeys="true" keyProperty="refundNo">
		
		<selectKey keyProperty="refundNo" resultType="int" order="BEFORE">
			SELECT MVY_REFUND_NO_SEQ.NEXTVAL FROM DUAL
		</selectKey>
			INSERT INTO MVY_REFUND
			VALUE(REFUND_NO, USER_NO, BUY_NO)
			VALUES(#{refundNo}, #{userNo}, #{buyNo})
	</insert>		
	
	<!-- 환불내역이 존재하는지 확인 -->
	<select id="refundExist" resultType="java.lang.Integer" parameterType="map">
		SELECT COUNT(REFUND_NO)
		FROM MVY_REFUND
		WHERE USER_NO = #{userNo} 
		AND BUY_NO = #{buyNo}
	</select>
	
	<!-- 환불처리 -->
	<update id="updateRefund" parameterType="map">
		UPDATE MVY_REFUND SET
		<include refid="refundChk"></include>   
		WHERE BUY_NO = #{buyNo}		
	</update>
	
	<!-- 환불처리2 영화가격만큼 유저 캐쉬 증가-->
	<update id="updateCash" parameterType="map">
		UPDATE MVY_USER SET
		USER_CASH = USER_CASH + #{moviePrice}		   
		WHERE USER_NO = #{userNo}		
	</update>	
	
	<!-- 환불처리3 환불한 영화 구매내역 상태 변경 -->
	<update id="updateBuy" parameterType="int">
		UPDATE MVY_BUY SET
		BUY_STATUS = '환불처리완료'
		WHERE BUY_NO = #{buyNo}
	</update>
	
	<select id="checkCash" parameterType="int" resultType="java.lang.Integer">
		SELECT USER_CASH 
		FROM MVY_USER
		WHERE USER_NO = #{userNo}
	</select>
	
     <!-- 유저로 옮길에정 11월 30일 -->
     <select id="checkGenre" parameterType="int" resultType="userDto">                    
         SELECT * FROM 
         GENRE_USER 
         WHERE USER_NO = #{userNo}            
     </select>
     
     <!-- 유저로 옮길예정 11월 30일 장르이름받기 -->
     <select id="genreName" parameterType="int" resultType="String">
     	SELECT GENRE_NAME
     	FROM GENRE
     	WHERE GENRE_NO = #{genreNo}
     </select>         
     
	<!-- 환불한 상품 재구매시 환불신청 내역에서 삭제 -->
	<update id="refundDelete" parameterType='int'>
		DELETE 
		FROM MVY_REFUND 
		WHERE REFUND_NO = #{refundNo}
	</update>     
	
</mapper>