<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.member">

	<sql id="search">
		<choose>
		<!-- 검색 옵션이 전체 검색일 경우  -->
			<when test="searchOption == 'all'">
				WHERE	MNAME LIKE '%'||#{keyword}||'%'
				OR		EMAIL LIKE '%'||#{keyword}||'%'
			</when>
		<!-- 전체 검색이 아닌 경우  -->
			<otherwise>
				WHERE ${searchOption} LIKE '%'||#{keyword}||'%'
			</otherwise>
		</choose>
	</sql>

	<resultMap type="memberDto" id="memberResultMap">
		<id column="MNO" property="no"/>
		<result column="MNAME" property="name"/>
		<result column="EMAIL" property="email"/>
		<result column="PWD" property="password"/>
		<result column="CRE_DATE" property="createDate"
			javaType="java.util.Date"/>
		<result column="MOD_DATE" property="modifyDate"
			javaType="java.util.Date"/>
	</resultMap>

	<!-- <select id="memberSelectList" resultMap="memberResultMap">
		SELECT MNO, MNAME, EMAIL, CRE_DATE 
		FROM MEMBER 
		ORDER BY MNO DESC
	</select> -->
	
	<select id="memberSelectList" parameterType="map" 
		resultMap="memberResultMap">
		SELECT PM.MNO, PM.MNAME, PM.EMAIL, PM.CRE_DATE
		FROM (
	        	SELECT ROWNUM RNUM, M.MNO, M.MNAME
					, M.EMAIL, M.CRE_DATE
	        	FROM (
	                SELECT MNO, MNAME, EMAIL, CRE_DATE
					FROM MEMBER
	                <include refid="search"></include>
					ORDER BY CRE_DATE DESC) M
		) PM
		WHERE PM.RNUM BETWEEN #{start} AND #{end} 
	</select>

	<select id="memberExist" parameterType="map" 
		resultMap="memberResultMap">
		SELECT MNO, MNAME, EMAIL
		FROM MEMBER
		WHERE EMAIL = #{email} AND PWD = #{pwd}
	</select>
	
	<insert id="memberInsertOne" 
		parameterType="com.edu.member.model.MemberDto"
		useGeneratedKeys="true" keyProperty="no">
		
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			SELECT MEMBER_MNO_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		
		INSERT INTO MEMBER
		VALUE(MNO, EMAIL, PWD, MNAME, CRE_DATE, MOD_DATE)
		VALUES(#{no}, #{email}, #{password}
			, #{name}, SYSDATE, SYSDATE)
	</insert>

	<select id="memberSelectOne" parameterType="int" 
		resultMap="memberResultMap">
		SELECT MNO, MNAME, EMAIL, CRE_DATE 
		FROM MEMBER
		WHERE MNO = #{no} 
	</select>

	<!-- 다이나믹 쿼리 -->
	<update id="memberUpdateOne" parameterType="memberDto">
		UPDATE MEMBER
		<set>
			<if test="email != ''">EMAIL = #{email},</if> 
			<if test="name != ''">MNAME = #{name},</if>
			<if test="password != ''">PWD = #{password},</if>
			MOD_DATE = SYSDATE
		</set>
		WHERE MNO = #{no}
	</update>	
	
	<delete id="memberDeleteOne" parameterType="int">
		DELETE FROM MEMBER
		WHERE MNO = #{value}
	</delete>

	<select id="memberSelectTotalCount" resultType="java.lang.Integer"
		parameterType="map">
		SELECT COUNT(*)
		FROM MEMBER
		<include refid="search"></include>
	</select>

	<insert id="insertFile" parameterType="map">
		INSERT INTO TB_FILE
		(IDX, PARENT_SEQ, ORIGINAL_FILE_NAME,
		STORED_FILE_NAME, FILE_SIZE, CRE_DATE)
		VALUES
		(TB_FILE_IDX_SEQ.NEXTVAL, #{parentSeq}, #{original_file_name},
		 #{stored_file_name}, #{file_size}, SYSDATE)
	</insert>

	<select id="fileSelectList" parameterType="int" resultType="map">
		SELECT IDX, ORIGINAL_FILE_NAME, STORED_FILE_NAME,
	    ROUND(FILE_SIZE/1024, 1) AS FILE_SIZE
		FROM TB_FILE
		WHERE PARENT_SEQ = #{no}
	</select>

	<select id="fileSelectStoredFileName" parameterType="int"
		resultType="map">
		SELECT IDX, STORED_FILE_NAME
		FROM TB_FILE
		WHERE PARENT_SEQ = #{parentSeq}
	</select>

	<delete id="fileDelete" parameterType="int">
		DELETE FROM TB_FILE
		WHERE PARENT_SEQ = #{parentSeq}
	</delete>

</mapper>