<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.movieyo.buy">

	<resultMap type="buyDto" id="buyResultMap">
		<id column="BUY_NO" property="buyNo"/>
		<result column="USER_NO" property="userNo"/>
		<result column="MOVIE_NO" property="movieNo"/>
		<result column="BUY_DATE" property="buyDate"/>
		<result column="BUY_STATUS" property="buyStatus"/>		
	</resultMap>
	
	<!-- 11/25 검색 ALL - 영화제목이나 환불상태 -->
	<!-- 나머지는 해당 서치옵션만 -->
    <sql id="search">
        <choose>
            <when test="searchOption == 'all'">
                WHERE MOVIE_TITLE LIKE '%'||#{keyword}||'%' 
                OR USER_NICKNAME LIKE '%'||#{keyword}||'%' 
                OR BUY_STATUS LIKE '%'||#{keyword}||'%'              
            </when>
            <otherwise>
                WHERE ${searchOption} LIKE '%'||#{keyword}||'%'
            </otherwise>
        </choose>
    </sql>	
    
    <!-- 관리자의 경우 조회 -->
    <sql id="buyListSearch">    	
   		<if test="userAdmin == 0">
   		    AND A.USER_NO = #{userNo}	
   		</if>
    </sql>
    
<!-- 	영화수 -->
	<select id="buySelectTotalCount" resultType="java.lang.Integer" parameterType="map">			
		SELECT COUNT(*) 
		FROM (SELECT A.USER_NICKNAME, B.BUY_DATE, C.MOVIE_TITLE, C.MOVIE_PRICE, B.BUY_STATUS 
		FROM MVY_USER A, 
			MVY_BUY B, 
			MVY_MOVIE C 
			WHERE A.USER_NO = B.USER_NO 
			AND B.MOVIE_NO = C.MOVIE_NO
			<include refid="buyListSearch"></include>) M  
			<include refid="search"></include>			           
	</select>	
	
	<select id='buySelectList' parameterType='map' resultType='map'>
	SELECT BUY.USER_NICKNAME, BUY.USER_NO, BUY.BUY_DATE, BUY.MOVIE_TITLE, BUY.MOVIE_PRICE, BUY.BUY_STATUS, BUY.BUY_NO, BUY.MOVIE_NO
	FROM
		(SELECT ROWNUM RNUM, M.USER_NICKNAME, M.USER_NO, M.BUY_DATE, M.MOVIE_TITLE, M.MOVIE_PRICE, M.BUY_STATUS, M.BUY_NO ,M.MOVIE_NO
			FROM
			(SELECT A.USER_NICKNAME, A.USER_NO, B.BUY_DATE, C.MOVIE_TITLE, C.MOVIE_PRICE, B.BUY_STATUS, B.BUY_NO, B.MOVIE_NO
			FROM MVY_USER A, 
			     MVY_BUY B,
			     MVY_MOVIE C				
				WHERE A.USER_NO = B.USER_NO
				AND B.MOVIE_NO = C.MOVIE_NO
				<include refid="buyListSearch"></include>
				) M 
				<include refid="search"></include>
				) BUY
		WHERE BUY.RNUM BETWEEN #{start} AND #{end}
	</select>	
	
	<!-- 구매내역 추가 -->
	<insert id="buyInsertOne" parameterType="com.movieyo.buy.dto.BuyDto"
	useGeneratedKeys="true" keyProperty="buyNo">
		
		<selectKey keyProperty="buyNo" resultType="int" order="BEFORE">
			SELECT MVY_BUY_NO_SEQ.NEXTVAL FROM DUAL
		</selectKey>
			INSERT INTO MVY_BUY
			VALUE(BUY_NO, MOVIE_NO, USER_NO)
			VALUES(#{buyNo}, #{movieNo}, #{userNo})
	</insert>		
	
	<!-- 구매내역 중복 조회 -->
	<select id="buyExistOne" parameterType='map' resultType="java.lang.Integer">
		SELECT COUNT(BUY_NO)
		FROM MVY_BUY
		WHERE USER_NO = #{userNo}
		AND MOVIE_NO = #{movieNo}
        AND BUY_STATUS != '환불처리완료'	
	</select>
	
	<!-- 구매상태 조회-->
	<select id="buyStatusCheck" parameterType='map' resultType="java.lang.Integer">
		SELECT COUNT(BUY_NO)
		FROM MVY_BUY
		WHERE USER_NO = #{userNo}
		AND MOVIE_NO = #{movieNo}
        AND BUY_STATUS = '환불처리완료'		
	</select>
	
	<!-- 구매상태 환불인 경우 업데이트 -->
	<update id="buyStatusUpdate" parameterType='map'>
		UPDATE MVY_BUY
		SET BUY_STATUS = '보유중'
		WHERE USER_NO = #{userNo}
		AND MOVIE_NO = #{movieNo}
	</update>
	
	<!-- 환불신청시 환불신청창 업데이트 -->
	<update id="refundRequestUpdate" parameterType='int'>
		UPDATE MVY_BUY
		SET BUY_STATUS = '환불신청중'
		WHERE BUY_NO = #{buyNo}
	</update>
		
	<!-- 환불신청시 환불신청 거절됨 -->
	<update id="refundRequestDeny" parameterType='int'>
		UPDATE MVY_BUY
		SET BUY_STATUS = '환불불가'
		WHERE BUY_NO = #{buyNo}
	</update>

	
	<select id="selectRefundNo" parameterType="map" resultType="java.lang.Integer">
        SELECT REFUND_NO
        FROM MVY_REFUND A
           , MVY_BUY B
        WHERE A.USER_NO = B.USER_NO
        AND B.USER_NO = #{userNo}
        AND B.BUY_STATUS = '보유중'
        AND B.MOVIE_NO = #{movieNo}
        AND A.BUY_NO = B.BUY_NO
	</select>
	
	<select id='totalMoney' resultType="java.lang.Integer">
		SELECT SUM(A.MOVIE_PRICE)
		FROM MVY_MOVIE A, 
		     MVY_BUY B
		WHERE B.MOVIE_NO = A.MOVIE_NO
		AND B.BUY_STATUS = '보유중'
	</select>
	
	<select id='refundMoney' resultType="java.lang.Integer">
		SELECT SUM(A.MOVIE_PRICE)
		FROM MVY_MOVIE A, 
		     MVY_BUY B
		WHERE B.MOVIE_NO = A.MOVIE_NO		
		AND B.BUY_STATUS = '환불처리완료'
	</select>	
	
</mapper>