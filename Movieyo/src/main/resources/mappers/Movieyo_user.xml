<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.movieyo.user">

	<resultMap type="userDto" id="userResultMap">
		<id column="USER_NO" property="userNo"/>
		<result column="USER_EMAIL" property="email"/>
		<result column="USER_PASSWORD" property="password"/>
		<result column="USER_NAME" property="userName"/>
		<result column="USER_BIRTH" property="userBirth"
			javaType="java.util.Date"/>
		<result column="USER_CREDATE" property="userCreateDate"
			javaType="java.util.Date"/>
		<result column="USER_NICKNAME" property="nickname"/>
		<result column="USER_GENDER" property="gender"/>
		<result column="USER_CASH" property="userCash"/>
		<result column="USER_ADMIN" property="userAdmin"/>
	</resultMap>
	
	<sql id="search">
		<choose>
			<when test="searchOption == 'all'">
				WHERE USER_NAME LIKE '%'||#{keyword}||'%'
				OR USER_NICKNAME LIKE '%'||#{keyword}||'%'
			</when>
			<otherwise>
				WHERE ${searchOption} LIKE '%'||#{keyword}||'%'
			</otherwise>
		</choose>
	</sql>

	<select id="userExist" parameterType="map" 
		resultMap="userResultMap">
		SELECT USER_NO, USER_NAME, USER_CREDATE, USER_BIRTH, USER_NICKNAME,
		USER_GENDER, USER_ADMIN, USER_CASH, USER_PASSWORD
		FROM MVY_USER
		WHERE USER_EMAIL = #{email} AND USER_PASSWORD = #{password}
	</select>
	
	<insert id="userInsertOne" parameterType="com.movieyo.user.dto.UserDto"
		useGeneratedKeys="true" keyProperty="userNo">
		
		<selectKey keyProperty="userNo" resultType="int" order="BEFORE">
			select MVY_USER_NO_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO MVY_USER
		VALUE(USER_NO, USER_EMAIL, USER_PASSWORD, USER_NAME, USER_BIRTH
		, USER_CREDATE, USER_NICKNAME, USER_GENDER)
		VALUES(#{userNo}, #{email}, #{password}, #{userName}
		, #{userBirth}, SYSDATE, #{nickname}, #{gender})
	</insert>
	
	<select id="userSelectOne" parameterType="int"
		resultMap="userResultMap">
		SELECT USER_NO, USER_EMAIL, USER_NAME, USER_CREDATE, USER_BIRTH,
		USER_NICKNAME, USER_GENDER, USER_ADMIN, USER_CASH, USER_PASSWORD
		FROM MVY_USER
		WHERE USER_NO = #{userNo}		
	</select>
	
	<update id="userUpdateOne" parameterType="userDto">
		UPDATE MVY_USER
		SET USER_NICKNAME = #{nickname}
		WHERE USER_NO = #{userNo}		
	</update>
	
	<update id="passwordUpdate" parameterType="userDto">
		UPDATE MVY_USER
		SET USER_PASSWORD = #{password}
		WHERE USER_NO = #{userNo}
	</update>
	
	<delete id="userDeleteOne" parameterType="int">
		DELETE FROM MVY_USER
		WHERE USER_NO = #{userNo}
	</delete>
	
	<delete id="userGenreDelete" parameterType="int">
		DELETE FROM GENRE_USER
		WHERE USER_NO = #{userNo}
	</delete>

	<delete id="userRefundDelete" parameterType="int">
		DELETE FROM MVY_REFUND
		WHERE USER_NO = #{userNo}
	</delete>
	
	<update id="updatePw" parameterType="userDto">
		UPDATE MVY_USER SET USER_PASSWORD = #{password} WHERE USER_EMAIL = #{email}		
	</update>

	<select id="readMember" parameterType="string"
		resultMap="userResultMap">
		SELECT USER_NO, USER_NAME, USER_EMAIL, USER_CREDATE
		FROM MVY_USER
		WHERE USER_EMAIL = #{email}		
	</select>
	
	<select id="userSelectTotalCount" resultType="java.lang.Integer" parameterType="map">
		SELECT COUNT(*)
		FROM MVY_USER
		<include refid="search"></include>
	</select>
	<update id="updateCash" parameterType="map">
		UPDATE MVY_USER
		SET USER_CASH = #{userCash}
		WHERE USER_NO = #{userNo}
	</update>
	<select id="userSelectList" resultMap="userResultMap">
		SELECT MV.USER_NO, MV.USER_EMAIL, MV.USER_NICKNAME
		      , MV.USER_NAME, MV.USER_BIRTH, MV.USER_GENDER, MV.USER_CASH, MV.USER_ADMIN
		   FROM (
		        SELECT ROWNUM RNUM, M.USER_NO, M.USER_EMAIL, M.USER_NICKNAME
		      , M.USER_NAME, M.USER_BIRTH, M.USER_GENDER, M.USER_CASH, M.USER_ADMIN
		        FROM (
	                SELECT USER_NO, USER_EMAIL, USER_NICKNAME, USER_NAME, USER_BIRTH, USER_GENDER, USER_CASH, USER_ADMIN
	         	   	   FROM MVY_USER
	         	   	   <include refid="search"></include>
			           ORDER BY USER_NO ASC) M
      				) MV
		WHERE MV.RNUM BETWEEN #{start} AND #{end}
	</select>	

	<update id="userBuyMovie" parameterType="map">
		UPDATE MVY_USER
        SET USER_CASH = USER_CASH - #{moviePrice}
        WHERE USER_NO = #{userNo}	
	</update>
	
	<select id='userCurrentCash' parameterType="int" resultType='java.lang.Integer'>
		SELECT USER_CASH
		FROM MVY_USER
		WHERE USER_NO = #{userNo}
	</select>
	
</mapper>